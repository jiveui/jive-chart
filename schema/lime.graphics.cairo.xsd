<xs:schema targetNamespace="lime.graphics.cairo" xmlns="lime.graphics.cairo" xmlns:xs="http://www.w3.org/2001/XMLSchema"
xmlns:lime-math="lime.math"
xmlns:lime-text="lime.text"
xmlns:empty="empty"
>
<xs:import namespace="lime.math" schemaLocation="lime.math.xsd" />
<xs:import namespace="lime.text" schemaLocation="lime.text.xsd" />
<xs:import namespace="empty" schemaLocation="empty.xsd" />
<xs:complexType name="CairoFontSchemaTypeValue">
<xs:all><xs:element ref="CairoFont"/></xs:all></xs:complexType>

<xs:complexType name="CairoFontOptionsSchemaTypeValue">
<xs:all><xs:element ref="CairoFontOptions"/></xs:all></xs:complexType>

<xs:complexType name="CairoSchemaTypeValue">
<xs:all><xs:element ref="Cairo"/></xs:all></xs:complexType>

<xs:complexType name="CairoFontSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="font" type="lime-text:FontSchemaTypeValue"/>
<xs:element minOccurs="0" name="handle" type="xs:string"/>
</xs:all>
<xs:attribute name="font" type="xs:string"/>
<xs:attribute name="handle" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="CairoFontOptionsSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="antialias" type="xs:string"/>
<xs:element minOccurs="0" name="subpixelOrder" type="xs:string"/>
<xs:element minOccurs="0" name="hintStyle" type="xs:string"/>
<xs:element minOccurs="0" name="hintMetrics" type="xs:string"/>
<xs:element minOccurs="0" name="handle" type="xs:string"/>
</xs:all>
<xs:attribute name="antialias" type="xs:string"/>
<xs:attribute name="subpixelOrder" type="xs:string"/>
<xs:attribute name="hintStyle" type="xs:string"/>
<xs:attribute name="hintMetrics" type="xs:string"/>
<xs:attribute name="handle" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="CairoSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="antialias" type="xs:string"/>
<xs:element minOccurs="0" name="currentPoint" type="lime-math:Vector2SchemaTypeValue"/>
<xs:element minOccurs="0" name="dash" type="empty:ArraySchemaTypeValue"/>
<xs:element minOccurs="0" name="dashCount" type="xs:int"/>
<xs:element minOccurs="0" name="fillRule" type="xs:string"/>
<xs:element minOccurs="0" name="groupTarget" type="xs:string"/>
<xs:element minOccurs="0" name="hasCurrentPoint" type="xs:boolean"/>
<xs:element minOccurs="0" name="lineCap" type="xs:string"/>
<xs:element minOccurs="0" name="lineJoin" type="xs:string"/>
<xs:element minOccurs="0" name="lineWidth" type="xs:double"/>
<xs:element minOccurs="0" name="matrix" type="lime-math:Matrix3SchemaTypeValue"/>
<xs:element minOccurs="0" name="miterLimit" type="xs:double"/>
<xs:element minOccurs="0" name="operator" type="xs:string"/>
<xs:element minOccurs="0" name="referenceCount" type="xs:int"/>
<xs:element minOccurs="0" name="source" type="xs:string"/>
<xs:element minOccurs="0" name="target" type="xs:string"/>
<xs:element minOccurs="0" name="tolerance" type="xs:double"/>
<xs:element minOccurs="0" name="userData" type="xs:string"/>
</xs:all>
<xs:attribute name="antialias" type="xs:string"/>
<xs:attribute name="currentPoint" type="xs:string"/>
<xs:attribute name="dash" type="xs:string"/>
<xs:attribute name="dashCount" type="xs:int"/>
<xs:attribute name="fillRule" type="xs:string"/>
<xs:attribute name="groupTarget" type="xs:string"/>
<xs:attribute name="hasCurrentPoint" type="xs:boolean"/>
<xs:attribute name="lineCap" type="xs:string"/>
<xs:attribute name="lineJoin" type="xs:string"/>
<xs:attribute name="lineWidth" type="xs:double"/>
<xs:attribute name="matrix" type="xs:string"/>
<xs:attribute name="miterLimit" type="xs:double"/>
<xs:attribute name="operator" type="xs:string"/>
<xs:attribute name="referenceCount" type="xs:int"/>
<xs:attribute name="source" type="xs:string"/>
<xs:attribute name="target" type="xs:string"/>
<xs:attribute name="tolerance" type="xs:double"/>
<xs:attribute name="userData" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>


<xs:element name="CairoFont" type="CairoFontSchemaType"/>
<xs:element name="CairoFontOptions" type="CairoFontOptionsSchemaType"/>
<xs:element name="Cairo" type="CairoSchemaType"/>
</xs:schema>
